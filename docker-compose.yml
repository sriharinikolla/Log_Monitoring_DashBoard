version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - app-net

  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-net

  flask-api:
    build: .
    ports:
      - "5000:5000"
    depends_on:
      - kafka
    networks:
      - app-net

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_DB: logdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-net

  grafana:
    image: grafana/grafana
    container_name: cc-grafana
    depends_on:
      - postgres
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: Grafana@2611
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - app-net

volumes:
  pgdata:
  grafana-storage:

networks:
  app-net:
